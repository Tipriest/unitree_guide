<launch>
    <arg name="rname" default="el_201"/>
    <arg name="robot_path" default="(find $(arg rname)_description)"/>
    <arg name="dollar" default="$"/>
    <arg name="user_debug" default="false"/>
    <param name="robot_name" value="$(arg rname)"/>

    <!-- 加载urdf模型 -->
    <!-- Load the URDF into the ROS Parameter Server -->
    <group if="$(eval arg('rname') != 'el_201')">
        <param name="robot_description" command="$(find xacro)/xacro --inorder '$(arg dollar)$(arg robot_path)/xacro/robot.xacro' DEBUG:=$(arg user_debug)"/>
    </group>
    <group if="$(eval arg('rname') == 'el_201')">
        <param name="robot_description" command="cat $(find el_201_description)/urdf/$(arg rname).urdf"/>
    </group>
    <!-- 加载控制参数/控制插件 -->
    <!-- Load joint controller configurations from YAML file to parameter server -->
    <group if="$(eval arg('rname') != 'el_201')">
        <rosparam file="/home/tipriest/Documents/legged_localization_benchmark/src/unitree_ros/robots/$(arg rname)_description/config/robot_control.yaml" command="load"/>
    </group>
    <!-- <group if="$(eval arg('rname') == 'el_201')">
        <rosparam file="/home/tipriest/Documents/legged_localization_benchmark/src/unitree_ros/robots/hexapod_description/el_201_description/config/robot_control.yaml" command="load"/>
    </group> -->
    <rosparam file="/home/tipriest/Documents/legged_localization_benchmark/src/unitree_ros/robots/hexapod_description/el_201_description/config/robot_control.yaml" command="load"/>
    <!-- 加载控制器 -->
    <!-- load the controllers -->
    <group if="$(eval arg('rname') == 'go1l2')">
        <node pkg="controller_manager" type="spawner" name="controller_spawner" respawn="false" output="screen" ns="/$(arg rname)_gazebo" args="joint_state_controller
            FL_hip_controller FL_thigh_controller FL_calf_controller
            FR_hip_controller FR_thigh_controller FR_calf_controller
            RL_hip_controller RL_thigh_controller RL_calf_controller
            RR_hip_controller RR_thigh_controller RR_calf_controller "/>
    </group>
    <group if="$(eval arg('rname') == 'el_201')">
        <node pkg="controller_manager" type="spawner" name="controller_spawner" respawn="false" output="screen" ns="/$(arg rname)_gazebo" args="joint_state_controller
            RF_HAA_controller RF_HFE_controller RF_KFE_controller
            RM_HAA_controller RM_HFE_controller RM_KFE_controller
            RB_HAA_controller RB_HFE_controller RB_KFE_controller
            LF_HAA_controller LF_HFE_controller LF_KFE_controller
            LM_HAA_controller LM_HFE_controller LM_KFE_controller
            LB_HAA_controller LB_HFE_controller LB_KFE_controller"/>
    </group>

    <!-- 输出机器人状态反馈 -->
    <!-- convert joint states to TF transforms for rviz, etc -->
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" respawn="false" output="screen">
        <remap from="/joint_states" to="/$(arg rname)_gazebo/joint_states"/>
    </node>

    <!-- 控制程序，状态机与状态切换 -->
    <!-- <node pkg= "unitree_guide" type = "junior_ctrl" name = "junior_ctrl" output = "screen"/> -->
</launch>